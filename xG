{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data from statsbomb and using pandas dataframes\n",
    "import statsbomb as sb\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Plotting\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.mlab as mlab\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "import scikitplot as skplt\n",
    " \n",
    "# Machine learning\n",
    "from sklearn import preprocessing, model_selection, svm, metrics\n",
    "from sklearn.model_selection import train_test_split, cross_val_predict, cross_val_score, GridSearchCV\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.ensemble import ExtraTreesClassifier\n",
    "from sklearn.ensemble import GradientBoostingClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.utils import resample\n",
    "from sklearn.feature_selection import RFE\n",
    "from imblearn.over_sampling import SMOTE\n",
    "from collections import Counter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all competitions\n",
    "competitions = sb.Competitions()\n",
    " \n",
    "# Get json data\n",
    "json_data = competitions.data\n",
    " \n",
    "# Convert to dataframe\n",
    "df = competitions.get_dataframe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>competition_gender</th>\n",
       "      <th>competition_id</th>\n",
       "      <th>competition_name</th>\n",
       "      <th>country_name</th>\n",
       "      <th>match_available</th>\n",
       "      <th>match_updated</th>\n",
       "      <th>season_id</th>\n",
       "      <th>season_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>female</td>\n",
       "      <td>37</td>\n",
       "      <td>FA Women's Super League</td>\n",
       "      <td>England</td>\n",
       "      <td>2019-10-20T10:18:13.183</td>\n",
       "      <td>2019-10-20T10:18:13.183</td>\n",
       "      <td>42</td>\n",
       "      <td>2019/2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>female</td>\n",
       "      <td>37</td>\n",
       "      <td>FA Women's Super League</td>\n",
       "      <td>England</td>\n",
       "      <td>2019-06-23T15:32:29.914</td>\n",
       "      <td>2019-06-23T15:32:29.914</td>\n",
       "      <td>4</td>\n",
       "      <td>2018/2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>male</td>\n",
       "      <td>43</td>\n",
       "      <td>FIFA World Cup</td>\n",
       "      <td>International</td>\n",
       "      <td>2019-06-23T12:38:35.142</td>\n",
       "      <td>2019-06-23T12:38:35.142</td>\n",
       "      <td>3</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-29T20:44:30.861</td>\n",
       "      <td>2019-07-29T20:44:30.861</td>\n",
       "      <td>27</td>\n",
       "      <td>2015/2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-30T12:42:05.563</td>\n",
       "      <td>2019-07-30T12:42:05.563</td>\n",
       "      <td>26</td>\n",
       "      <td>2014/2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-24T19:44:48.866</td>\n",
       "      <td>2019-07-24T19:44:48.866</td>\n",
       "      <td>25</td>\n",
       "      <td>2013/2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-29T17:46:18.935</td>\n",
       "      <td>2019-07-29T17:46:18.935</td>\n",
       "      <td>24</td>\n",
       "      <td>2012/2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-08-27T09:48:17.842</td>\n",
       "      <td>2019-08-27T09:48:17.842</td>\n",
       "      <td>23</td>\n",
       "      <td>2011/2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-08-01T17:44:54.870</td>\n",
       "      <td>2019-08-01T17:44:54.870</td>\n",
       "      <td>22</td>\n",
       "      <td>2010/2011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-11T07:44:14.533</td>\n",
       "      <td>2019-07-11T07:44:14.533</td>\n",
       "      <td>21</td>\n",
       "      <td>2009/2010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-06T22:42:14.468</td>\n",
       "      <td>2019-07-06T22:42:14.468</td>\n",
       "      <td>41</td>\n",
       "      <td>2008/2009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-04T10:05:48.149</td>\n",
       "      <td>2019-07-04T10:05:48.149</td>\n",
       "      <td>40</td>\n",
       "      <td>2007/2008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-02T12:37:13.627</td>\n",
       "      <td>2019-07-02T12:37:13.627</td>\n",
       "      <td>39</td>\n",
       "      <td>2006/2007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-07-02T14:37:04.106</td>\n",
       "      <td>2019-07-02T14:37:04.106</td>\n",
       "      <td>38</td>\n",
       "      <td>2005/2006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>male</td>\n",
       "      <td>11</td>\n",
       "      <td>La Liga</td>\n",
       "      <td>Spain</td>\n",
       "      <td>2019-06-28T12:41:15.620</td>\n",
       "      <td>2019-06-28T12:41:15.620</td>\n",
       "      <td>37</td>\n",
       "      <td>2004/2005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>female</td>\n",
       "      <td>49</td>\n",
       "      <td>NWSL</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>2019-07-24T14:38:11.095</td>\n",
       "      <td>2019-07-24T14:38:11.095</td>\n",
       "      <td>3</td>\n",
       "      <td>2018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>female</td>\n",
       "      <td>72</td>\n",
       "      <td>Women's World Cup</td>\n",
       "      <td>International</td>\n",
       "      <td>2019-07-10T13:51:28.459</td>\n",
       "      <td>2019-07-10T13:51:28.459</td>\n",
       "      <td>30</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   competition_gender  competition_id         competition_name  \\\n",
       "0              female              37  FA Women's Super League   \n",
       "1              female              37  FA Women's Super League   \n",
       "2                male              43           FIFA World Cup   \n",
       "3                male              11                  La Liga   \n",
       "4                male              11                  La Liga   \n",
       "5                male              11                  La Liga   \n",
       "6                male              11                  La Liga   \n",
       "7                male              11                  La Liga   \n",
       "8                male              11                  La Liga   \n",
       "9                male              11                  La Liga   \n",
       "10               male              11                  La Liga   \n",
       "11               male              11                  La Liga   \n",
       "12               male              11                  La Liga   \n",
       "13               male              11                  La Liga   \n",
       "14               male              11                  La Liga   \n",
       "15             female              49                     NWSL   \n",
       "16             female              72        Women's World Cup   \n",
       "\n",
       "                country_name          match_available  \\\n",
       "0                    England  2019-10-20T10:18:13.183   \n",
       "1                    England  2019-06-23T15:32:29.914   \n",
       "2              International  2019-06-23T12:38:35.142   \n",
       "3                      Spain  2019-07-29T20:44:30.861   \n",
       "4                      Spain  2019-07-30T12:42:05.563   \n",
       "5                      Spain  2019-07-24T19:44:48.866   \n",
       "6                      Spain  2019-07-29T17:46:18.935   \n",
       "7                      Spain  2019-08-27T09:48:17.842   \n",
       "8                      Spain  2019-08-01T17:44:54.870   \n",
       "9                      Spain  2019-07-11T07:44:14.533   \n",
       "10                     Spain  2019-07-06T22:42:14.468   \n",
       "11                     Spain  2019-07-04T10:05:48.149   \n",
       "12                     Spain  2019-07-02T12:37:13.627   \n",
       "13                     Spain  2019-07-02T14:37:04.106   \n",
       "14                     Spain  2019-06-28T12:41:15.620   \n",
       "15  United States of America  2019-07-24T14:38:11.095   \n",
       "16             International  2019-07-10T13:51:28.459   \n",
       "\n",
       "              match_updated  season_id season_name  \n",
       "0   2019-10-20T10:18:13.183         42   2019/2020  \n",
       "1   2019-06-23T15:32:29.914          4   2018/2019  \n",
       "2   2019-06-23T12:38:35.142          3        2018  \n",
       "3   2019-07-29T20:44:30.861         27   2015/2016  \n",
       "4   2019-07-30T12:42:05.563         26   2014/2015  \n",
       "5   2019-07-24T19:44:48.866         25   2013/2014  \n",
       "6   2019-07-29T17:46:18.935         24   2012/2013  \n",
       "7   2019-08-27T09:48:17.842         23   2011/2012  \n",
       "8   2019-08-01T17:44:54.870         22   2010/2011  \n",
       "9   2019-07-11T07:44:14.533         21   2009/2010  \n",
       "10  2019-07-06T22:42:14.468         41   2008/2009  \n",
       "11  2019-07-04T10:05:48.149         40   2007/2008  \n",
       "12  2019-07-02T12:37:13.627         39   2006/2007  \n",
       "13  2019-07-02T14:37:04.106         38   2005/2006  \n",
       "14  2019-06-28T12:41:15.620         37   2004/2005  \n",
       "15  2019-07-24T14:38:11.095          3        2018  \n",
       "16  2019-07-10T13:51:28.459         30        2019  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Showing the competitions\n",
    "# We will find and pick the data for World Cup 2018\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get all World Cup matches\n",
    "wc_matches = sb.Matches(event_id = '43', season_id = '3').get_dataframe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>away_score</th>\n",
       "      <th>away_team</th>\n",
       "      <th>competition</th>\n",
       "      <th>competition_stage</th>\n",
       "      <th>home_score</th>\n",
       "      <th>home_team</th>\n",
       "      <th>kick_off</th>\n",
       "      <th>last_updated</th>\n",
       "      <th>match_date</th>\n",
       "      <th>match_id</th>\n",
       "      <th>match_status</th>\n",
       "      <th>match_week</th>\n",
       "      <th>metadata</th>\n",
       "      <th>referee</th>\n",
       "      <th>season</th>\n",
       "      <th>stadium</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>782</td>\n",
       "      <td>43</td>\n",
       "      <td>{'id': 15, 'name': 'Semi-finals'}</td>\n",
       "      <td>1</td>\n",
       "      <td>771</td>\n",
       "      <td>20:00:00.000</td>\n",
       "      <td>2019-06-23T12:36:43.368</td>\n",
       "      <td>2018-07-10</td>\n",
       "      <td>8655</td>\n",
       "      <td>available</td>\n",
       "      <td>2</td>\n",
       "      <td>{'data_version': '1.0.2'}</td>\n",
       "      <td>{'id': 734, 'name': 'A. Cunha'}</td>\n",
       "      <td>3</td>\n",
       "      <td>{'id': 4726, 'name': 'Saint-Petersburg Stadium'}</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>768</td>\n",
       "      <td>43</td>\n",
       "      <td>{'id': 25, 'name': '3rd Place Final'}</td>\n",
       "      <td>2</td>\n",
       "      <td>782</td>\n",
       "      <td>16:00:00.000</td>\n",
       "      <td>2019-06-23T12:38:35.142</td>\n",
       "      <td>2018-07-14</td>\n",
       "      <td>8657</td>\n",
       "      <td>available</td>\n",
       "      <td>1</td>\n",
       "      <td>{'data_version': '1.0.2'}</td>\n",
       "      <td>{'id': 741, 'name': 'A. Faghani'}</td>\n",
       "      <td>3</td>\n",
       "      <td>{'id': 248, 'name': 'Saint Petersburg', 'count...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>772</td>\n",
       "      <td>43</td>\n",
       "      <td>{'id': 10, 'name': 'Group Stage'}</td>\n",
       "      <td>0</td>\n",
       "      <td>797</td>\n",
       "      <td>20:00:00.000</td>\n",
       "      <td>2019-05-14T08:23:15.306297</td>\n",
       "      <td>2018-06-20</td>\n",
       "      <td>7543</td>\n",
       "      <td>available</td>\n",
       "      <td>2</td>\n",
       "      <td>{'data_version': '1.0.2'}</td>\n",
       "      <td>{'id': 734, 'name': 'A. Cunha'}</td>\n",
       "      <td>3</td>\n",
       "      <td>{'id': 4258, 'name': 'Kazan Arena', 'country':...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>784</td>\n",
       "      <td>43</td>\n",
       "      <td>{'id': 10, 'name': 'Group Stage'}</td>\n",
       "      <td>0</td>\n",
       "      <td>792</td>\n",
       "      <td>16:00:00.000</td>\n",
       "      <td>2019-05-14T08:23:15.306297</td>\n",
       "      <td>2018-06-26</td>\n",
       "      <td>7562</td>\n",
       "      <td>available</td>\n",
       "      <td>3</td>\n",
       "      <td>{'data_version': '1.0.2'}</td>\n",
       "      <td>{'id': 725, 'name': 'S. Karasev'}</td>\n",
       "      <td>3</td>\n",
       "      <td>{'id': 249, 'name': 'Olimpiyskiy Stadion Fisht...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>793</td>\n",
       "      <td>43</td>\n",
       "      <td>{'id': 10, 'name': 'Group Stage'}</td>\n",
       "      <td>2</td>\n",
       "      <td>775</td>\n",
       "      <td>17:00:00.000</td>\n",
       "      <td>2019-05-14T08:23:15.306297</td>\n",
       "      <td>2018-06-22</td>\n",
       "      <td>7549</td>\n",
       "      <td>available</td>\n",
       "      <td>2</td>\n",
       "      <td>{'data_version': '1.0.2'}</td>\n",
       "      <td>{'id': 739, 'name': 'M. Conger'}</td>\n",
       "      <td>3</td>\n",
       "      <td>{'id': 4257, 'name': 'Volgograd Arena', 'count...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   away_score away_team competition                      competition_stage  \\\n",
       "0           0       782          43      {'id': 15, 'name': 'Semi-finals'}   \n",
       "1           0       768          43  {'id': 25, 'name': '3rd Place Final'}   \n",
       "2           1       772          43      {'id': 10, 'name': 'Group Stage'}   \n",
       "3           2       784          43      {'id': 10, 'name': 'Group Stage'}   \n",
       "4           0       793          43      {'id': 10, 'name': 'Group Stage'}   \n",
       "\n",
       "   home_score home_team      kick_off                last_updated  match_date  \\\n",
       "0           1       771  20:00:00.000     2019-06-23T12:36:43.368  2018-07-10   \n",
       "1           2       782  16:00:00.000     2019-06-23T12:38:35.142  2018-07-14   \n",
       "2           0       797  20:00:00.000  2019-05-14T08:23:15.306297  2018-06-20   \n",
       "3           0       792  16:00:00.000  2019-05-14T08:23:15.306297  2018-06-26   \n",
       "4           2       775  17:00:00.000  2019-05-14T08:23:15.306297  2018-06-22   \n",
       "\n",
       "   match_id match_status  match_week                   metadata  \\\n",
       "0      8655    available           2  {'data_version': '1.0.2'}   \n",
       "1      8657    available           1  {'data_version': '1.0.2'}   \n",
       "2      7543    available           2  {'data_version': '1.0.2'}   \n",
       "3      7562    available           3  {'data_version': '1.0.2'}   \n",
       "4      7549    available           2  {'data_version': '1.0.2'}   \n",
       "\n",
       "                             referee season  \\\n",
       "0    {'id': 734, 'name': 'A. Cunha'}      3   \n",
       "1  {'id': 741, 'name': 'A. Faghani'}      3   \n",
       "2    {'id': 734, 'name': 'A. Cunha'}      3   \n",
       "3  {'id': 725, 'name': 'S. Karasev'}      3   \n",
       "4   {'id': 739, 'name': 'M. Conger'}      3   \n",
       "\n",
       "                                             stadium  \n",
       "0   {'id': 4726, 'name': 'Saint-Petersburg Stadium'}  \n",
       "1  {'id': 248, 'name': 'Saint Petersburg', 'count...  \n",
       "2  {'id': 4258, 'name': 'Kazan Arena', 'country':...  \n",
       "3  {'id': 249, 'name': 'Olimpiyskiy Stadion Fisht...  \n",
       "4  {'id': 4257, 'name': 'Volgograd Arena', 'count...  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show the World Cup games\n",
    "wc_matches.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# But we want to focus on shots and goals\n",
    "# Create a list of all match ids for the matches in the 2018 World Cup \n",
    "match_list = wc_matches['match_id'].tolist()\n",
    " \n",
    "# Create an empty dataframe to add all shots\n",
    "shots_df = pd.DataFrame()\n",
    " \n",
    "# Loop through and add all shots from every match to the empty dataframe\n",
    "for i in match_list:\n",
    "    events = sb.Events(event_id=str(i))\n",
    "    shot = events.get_dataframe(event_type='shot')\n",
    "    shots_df = shots_df.append(shot)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1706 is the total number of shots from every match at the 2018 World Cup!\n",
      "--------------------\n",
      "Columns:\n",
      "['event_type', 'id', 'index', 'period', 'timestamp', 'minute', 'second', 'possession', 'possession_team', 'play_pattern', 'off_camera', 'team', 'player', 'position', 'duration', 'under_pressure', 'statsbomb_xg', 'key_pass_id', 'body_part', 'type', 'outcome', 'technique', 'first_time', 'follows_dribble', 'redirect', 'one_on_one', 'open_goal', 'deflected', 'start_location_x', 'start_location_y', 'end_location_x', 'end_location_y', 'end_location_z']\n",
      "--------------------\n",
      "Unique values:\n",
      "['Open Play' 'Free Kick' 'Penalty']\n",
      "--------------------\n",
      "Unique values in the 'play_pattern' column:\n",
      "['Regular Play' 'From Throw In' 'From Corner' 'From Free Kick'\n",
      " 'From Counter' 'From Goal Kick' 'From Kick Off' 'Other' 'From Keeper']\n"
     ]
    }
   ],
   "source": [
    "# Details on our data\n",
    "print(len(shots_df), \"is the total number of shots from every match at the 2018 World Cup!\")\n",
    "print(\"--------------------\")\n",
    " \n",
    "print(\"Columns:\")\n",
    "print(list(shots_df))\n",
    "print(\"--------------------\")\n",
    " \n",
    "print(\"Unique values:\")\n",
    "print(shots_df['type'].unique())\n",
    "print(\"--------------------\")\n",
    " \n",
    "print(\"Unique values in the 'play_pattern' column:\")\n",
    "print(shots_df['play_pattern'].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Remove penalties from the data since they are misleading in our analysis of shots\n",
    "nopen_shots = shots_df[shots_df['type'] != 'Penalty']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/SaeJin/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n"
     ]
    }
   ],
   "source": [
    "# Create a goal column, where 1 = goal and 0 = no goal\n",
    "nopen_shots['goal'] = np.where(nopen_shots['outcome'] == 'Goal', 1, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>event_type</th>\n",
       "      <th>id</th>\n",
       "      <th>index</th>\n",
       "      <th>period</th>\n",
       "      <th>timestamp</th>\n",
       "      <th>minute</th>\n",
       "      <th>second</th>\n",
       "      <th>possession</th>\n",
       "      <th>possession_team</th>\n",
       "      <th>play_pattern</th>\n",
       "      <th>...</th>\n",
       "      <th>redirect</th>\n",
       "      <th>one_on_one</th>\n",
       "      <th>open_goal</th>\n",
       "      <th>deflected</th>\n",
       "      <th>start_location_x</th>\n",
       "      <th>start_location_y</th>\n",
       "      <th>end_location_x</th>\n",
       "      <th>end_location_y</th>\n",
       "      <th>end_location_z</th>\n",
       "      <th>goal</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>shot</td>\n",
       "      <td>e33fea6f-1c7e-41b0-8526-fcc5e0fbe3aa</td>\n",
       "      <td>698</td>\n",
       "      <td>1</td>\n",
       "      <td>00:14:59.800</td>\n",
       "      <td>14</td>\n",
       "      <td>59</td>\n",
       "      <td>25</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>Regular Play</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>109.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>46.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>shot</td>\n",
       "      <td>98f8c815-5d4a-4a71-bf1a-5e0d287b2437</td>\n",
       "      <td>786</td>\n",
       "      <td>1</td>\n",
       "      <td>00:17:45.600</td>\n",
       "      <td>17</td>\n",
       "      <td>45</td>\n",
       "      <td>30</td>\n",
       "      <td>France</td>\n",
       "      <td>From Throw In</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>92.0</td>\n",
       "      <td>38.0</td>\n",
       "      <td>117.0</td>\n",
       "      <td>38.1</td>\n",
       "      <td>1.6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>shot</td>\n",
       "      <td>6af02b71-85f3-4061-b9d6-7478d099d4bb</td>\n",
       "      <td>819</td>\n",
       "      <td>1</td>\n",
       "      <td>00:18:32.760</td>\n",
       "      <td>18</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>Regular Play</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>107.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>shot</td>\n",
       "      <td>a2299393-0163-45bc-ab77-fdbf91b8c426</td>\n",
       "      <td>909</td>\n",
       "      <td>1</td>\n",
       "      <td>00:21:00.320</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>Belgium</td>\n",
       "      <td>From Corner</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>105.0</td>\n",
       "      <td>41.0</td>\n",
       "      <td>119.0</td>\n",
       "      <td>36.6</td>\n",
       "      <td>1.7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>shot</td>\n",
       "      <td>8f91c4c0-704c-4a08-937c-ff2510d4e218</td>\n",
       "      <td>958</td>\n",
       "      <td>1</td>\n",
       "      <td>00:22:41.960</td>\n",
       "      <td>22</td>\n",
       "      <td>41</td>\n",
       "      <td>38</td>\n",
       "      <td>France</td>\n",
       "      <td>Regular Play</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>103.0</td>\n",
       "      <td>48.0</td>\n",
       "      <td>120.0</td>\n",
       "      <td>46.1</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  event_type                                    id  index  period  \\\n",
       "0       shot  e33fea6f-1c7e-41b0-8526-fcc5e0fbe3aa    698       1   \n",
       "1       shot  98f8c815-5d4a-4a71-bf1a-5e0d287b2437    786       1   \n",
       "2       shot  6af02b71-85f3-4061-b9d6-7478d099d4bb    819       1   \n",
       "3       shot  a2299393-0163-45bc-ab77-fdbf91b8c426    909       1   \n",
       "4       shot  8f91c4c0-704c-4a08-937c-ff2510d4e218    958       1   \n",
       "\n",
       "      timestamp  minute  second  possession possession_team   play_pattern  \\\n",
       "0  00:14:59.800      14      59          25         Belgium   Regular Play   \n",
       "1  00:17:45.600      17      45          30          France  From Throw In   \n",
       "2  00:18:32.760      18      32          32         Belgium   Regular Play   \n",
       "3  00:21:00.320      21       0          36         Belgium    From Corner   \n",
       "4  00:22:41.960      22      41          38          France   Regular Play   \n",
       "\n",
       "   ... redirect one_on_one open_goal deflected  start_location_x  \\\n",
       "0  ...     None       None      None      None             109.0   \n",
       "1  ...     None       None      None      None              92.0   \n",
       "2  ...     None       None      None      None             107.0   \n",
       "3  ...     None       None      None      None             105.0   \n",
       "4  ...     None       None      None      None             103.0   \n",
       "\n",
       "  start_location_y  end_location_x end_location_y end_location_z goal  \n",
       "0             23.0           120.0           46.3            0.2    0  \n",
       "1             38.0           117.0           38.1            1.6    0  \n",
       "2             21.0           116.0           39.0            NaN    0  \n",
       "3             41.0           119.0           36.6            1.7    0  \n",
       "4             48.0           120.0           46.1            0.5    0  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show data\n",
    "nopen_shots.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average conversion rate:  8.24 %\n"
     ]
    }
   ],
   "source": [
    "# Calculating average shot conversion rate\n",
    "attempts = len(nopen_shots)\n",
    "goals = sum(nopen_shots['goal'])\n",
    "misses = attempts - goals\n",
    "conversion_rate = goals / attempts\n",
    "print('Average conversion rate: ',round(conversion_rate*100,2),\"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2655fa90>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Show graph\n",
    "# We see that most shots end up not being being a goal\n",
    "sns.set(style=\"ticks\", color_codes=True)\n",
    "sns.countplot(x=\"goal\", data=nopen_shots)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Feature engineering - Make new variables out of the raw data to improve model\n",
    "# Resetting index\n",
    "nopen_shots = nopen_shots.reset_index().drop('level_0', axis=1)\n",
    " \n",
    "# Our new variables: distance\n",
    "# Length of soccer field is 120 units long and width is 80 units wide\n",
    "# Use distance formula and angle from the centre of the goal being scored on ,at (120, 40), to location of shot\n",
    "nopen_shots['x_distance'] = 120 - nopen_shots['start_location_x']\n",
    "nopen_shots['y_distance'] = abs(40 - nopen_shots['start_location_y'])\n",
    "nopen_shots['distance'] = np.sqrt((nopen_shots['x_distance']**2 + nopen_shots['y_distance']**2))\n",
    "\n",
    "# If we know the player's weak and strong foot, we can make look at these data individually\n",
    "nopen_shots['body_part'] = np.where((nopen_shots['body_part'] == 'Right Foot')\n",
    "                                 | (nopen_shots['body_part'] == 'Left Foot'), 'foot',\n",
    "                                np.where(nopen_shots['body_part'] == 'Head', 'head', 'other'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Find model features in cols\n",
    "feature_cols = ['play_pattern', 'under_pressure', 'body_part', 'technique', 'first_time',\n",
    "                'follows_dribble', 'redirect', 'one_on_one', 'open_goal', 'deflected', 'distance']\n",
    "\n",
    "\n",
    "features = nopen_shots[feature_cols]\n",
    "# Find model labels\n",
    "labels = nopen_shots['goal']\n",
    " \n",
    "# 0 to NA values\n",
    "features = features.fillna(0)\n",
    "labels = labels.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>play_pattern</th>\n",
       "      <th>under_pressure</th>\n",
       "      <th>body_part</th>\n",
       "      <th>technique</th>\n",
       "      <th>first_time</th>\n",
       "      <th>follows_dribble</th>\n",
       "      <th>redirect</th>\n",
       "      <th>one_on_one</th>\n",
       "      <th>open_goal</th>\n",
       "      <th>deflected</th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20.248457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Half Volley</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>28.071338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23.021729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15.033296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.788294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12.649111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15.264338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>24.166092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11.704700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>From Counter</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.083218</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>26.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14.317821</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.027756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.410882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15.811388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>True</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.280110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23.259407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33.600595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Volley</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.152946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21.540659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>25.709920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12.165525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.780497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.027756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15.811388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Volley</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.071068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>23.853721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1608</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>4.242641</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1609</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>True</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1610</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Volley</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.357560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1611</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.856777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1612</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>29.546573</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1613</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1614</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>35.227830</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1615</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.246211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1616</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.601075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1617</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14.764823</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1618</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.364453</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1619</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1620</th>\n",
       "      <td>From Goal Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.016662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1621</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>head</td>\n",
       "      <td>Diving Header</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9.486833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1622</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>True</td>\n",
       "      <td>head</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12.083046</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1623</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>True</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21.840330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1624</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Volley</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17.691806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1625</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>18.384776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1626</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19.849433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1627</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>27.073973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1628</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19.104973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1629</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17.464249</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1630</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>35.440090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1631</th>\n",
       "      <td>From Throw In</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Half Volley</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>22.135944</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1632</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>31.764760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1633</th>\n",
       "      <td>From Corner</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16.643317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1634</th>\n",
       "      <td>From Free Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10.770330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1635</th>\n",
       "      <td>From Goal Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>True</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>22.847319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1636</th>\n",
       "      <td>From Goal Kick</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17.204651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1637</th>\n",
       "      <td>Regular Play</td>\n",
       "      <td>0</td>\n",
       "      <td>foot</td>\n",
       "      <td>Normal</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>13.038405</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1638 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        play_pattern under_pressure body_part      technique first_time  \\\n",
       "0       Regular Play           True      foot         Normal          0   \n",
       "1      From Throw In              0      foot    Half Volley       True   \n",
       "2       Regular Play           True      foot         Normal          0   \n",
       "3        From Corner              0      foot         Normal          0   \n",
       "4       Regular Play              0      foot         Normal       True   \n",
       "5     From Free Kick              0      head         Normal          0   \n",
       "6       Regular Play              0      foot         Normal       True   \n",
       "7       Regular Play              0      foot         Normal          0   \n",
       "8       Regular Play           True      foot         Normal       True   \n",
       "9       From Counter              0      foot         Normal          0   \n",
       "10      Regular Play              0      foot         Normal          0   \n",
       "11      Regular Play              0      foot         Normal       True   \n",
       "12      Regular Play           True      head         Normal          0   \n",
       "13    From Free Kick              0      foot         Normal          0   \n",
       "14      Regular Play           True      head         Normal          0   \n",
       "15      Regular Play              0      foot         Normal          0   \n",
       "16       From Corner           True      head         Normal          0   \n",
       "17      Regular Play              0      foot         Normal          0   \n",
       "18      Regular Play              0      foot         Normal          0   \n",
       "19      Regular Play              0      foot         Normal          0   \n",
       "20      Regular Play              0      foot         Volley          0   \n",
       "21     From Throw In              0      head         Normal          0   \n",
       "22      Regular Play              0      foot         Normal       True   \n",
       "23    From Free Kick              0      foot         Normal          0   \n",
       "24    From Free Kick              0      head         Normal          0   \n",
       "25      Regular Play              0      foot         Normal          0   \n",
       "26      Regular Play              0      foot         Normal       True   \n",
       "27     From Throw In              0      foot         Normal          0   \n",
       "28      Regular Play              0      foot         Volley       True   \n",
       "29     From Throw In              0      foot         Normal          0   \n",
       "...              ...            ...       ...            ...        ...   \n",
       "1608  From Free Kick              0      foot         Normal       True   \n",
       "1609   From Throw In           True      foot         Normal          0   \n",
       "1610  From Free Kick              0      foot         Volley       True   \n",
       "1611  From Free Kick              0      foot         Normal          0   \n",
       "1612    Regular Play              0      foot         Normal          0   \n",
       "1613    Regular Play              0      foot         Normal          0   \n",
       "1614     From Corner              0      foot         Normal          0   \n",
       "1615    Regular Play              0      head         Normal          0   \n",
       "1616    Regular Play              0      foot         Normal          0   \n",
       "1617     From Corner              0      foot         Normal          0   \n",
       "1618     From Corner              0      foot         Normal          0   \n",
       "1619     From Corner              0      head         Normal          0   \n",
       "1620  From Goal Kick              0      foot         Normal          0   \n",
       "1621     From Corner              0      head  Diving Header          0   \n",
       "1622    Regular Play           True      head         Normal          0   \n",
       "1623  From Free Kick           True      foot         Normal       True   \n",
       "1624    Regular Play              0      foot         Volley       True   \n",
       "1625   From Throw In              0      foot         Normal          0   \n",
       "1626    Regular Play              0      foot         Normal          0   \n",
       "1627  From Free Kick              0      foot         Normal          0   \n",
       "1628    Regular Play              0      foot         Normal          0   \n",
       "1629   From Throw In              0      foot         Normal          0   \n",
       "1630   From Throw In              0      foot         Normal          0   \n",
       "1631   From Throw In              0      foot    Half Volley       True   \n",
       "1632  From Free Kick              0      foot         Normal          0   \n",
       "1633     From Corner              0      foot         Normal          0   \n",
       "1634  From Free Kick              0      foot         Normal       True   \n",
       "1635  From Goal Kick              0      foot         Normal       True   \n",
       "1636  From Goal Kick              0      foot         Normal          0   \n",
       "1637    Regular Play              0      foot         Normal          0   \n",
       "\n",
       "     follows_dribble redirect one_on_one open_goal deflected   distance  \n",
       "0                  0        0          0         0         0  20.248457  \n",
       "1                  0        0          0         0         0  28.071338  \n",
       "2                  0        0          0         0         0  23.021729  \n",
       "3                  0        0          0         0         0  15.033296  \n",
       "4                  0        0          0         0         0  18.788294  \n",
       "5                  0        0          0         0         0  12.649111  \n",
       "6                  0        0          0         0         0  15.264338  \n",
       "7                  0        0          0         0         0  24.166092  \n",
       "8                  0        0          0         0         0  11.704700  \n",
       "9                  0        0          0         0         0  30.083218  \n",
       "10                 0        0          0         0         0  26.000000  \n",
       "11                 0        0          0         0         0  14.317821  \n",
       "12                 0        0          0         0         0  18.027756  \n",
       "13                 0        0          0         0         0  29.410882  \n",
       "14                 0        0          0         0         0   9.000000  \n",
       "15                 0        0          0         0         0  15.811388  \n",
       "16                 0        0          0         0         0   7.280110  \n",
       "17                 0        0          0         0         0  23.259407  \n",
       "18                 0        0          0         0         0  10.000000  \n",
       "19                 0        0          0         0         0  33.600595  \n",
       "20                 0        0          0         0         0  13.152946  \n",
       "21                 0        0          0         0         0  12.000000  \n",
       "22                 0        0          0         0         0  21.540659  \n",
       "23                 0        0          0         0         0  25.709920  \n",
       "24                 0        0          0         0         0  12.165525  \n",
       "25                 0        0          0         0         0  31.780497  \n",
       "26                 0        0          0         0         0  18.027756  \n",
       "27                 0        0          0         0         0  15.811388  \n",
       "28                 0        0          0         0         0   7.071068  \n",
       "29                 0        0          0         0         0  23.853721  \n",
       "...              ...      ...        ...       ...       ...        ...  \n",
       "1608               0        0          0      True         0   4.242641  \n",
       "1609               0        0          0         0         0  15.000000  \n",
       "1610               0        0          0         0         0  18.357560  \n",
       "1611               0        0          0         0         0  27.856777  \n",
       "1612               0        0          0         0         0  29.546573  \n",
       "1613               0        0          0         0         0   3.000000  \n",
       "1614               0        0          0         0         0  35.227830  \n",
       "1615               0        0          0         0         0   8.246211  \n",
       "1616               0        0          0         0         0  18.601075  \n",
       "1617               0        0          0         0         0  14.764823  \n",
       "1618               0        0          0         0         0  30.364453  \n",
       "1619               0        0          0         0         0   7.000000  \n",
       "1620               0        0          0         0         0  30.016662  \n",
       "1621               0        0          0         0         0   9.486833  \n",
       "1622               0        0          0         0         0  12.083046  \n",
       "1623               0        0          0         0         0  21.840330  \n",
       "1624               0        0          0         0         0  17.691806  \n",
       "1625               0        0          0         0         0  18.384776  \n",
       "1626               0        0          0         0         0  19.849433  \n",
       "1627               0        0          0         0         0  27.073973  \n",
       "1628               0        0          0         0         0  19.104973  \n",
       "1629               0        0       True         0         0  17.464249  \n",
       "1630               0        0          0         0         0  35.440090  \n",
       "1631               0        0          0         0         0  22.135944  \n",
       "1632               0        0          0         0         0  31.764760  \n",
       "1633               0        0          0         0         0  16.643317  \n",
       "1634               0        0          0         0         0  10.770330  \n",
       "1635               0        0          0         0         0  22.847319  \n",
       "1636               0        0          0         0         0  17.204651  \n",
       "1637               0        0          0         0         0  13.038405  \n",
       "\n",
       "[1638 rows x 11 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show features\n",
    "# As you can see, we have the new variables of distance and angle and have filled up NA values with 0\n",
    "# We have the relevant and useful information we need\n",
    "features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.248457</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28.071338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23.021729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15.033296</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18.788294</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    distance\n",
       "0  20.248457\n",
       "1  28.071338\n",
       "2  23.021729\n",
       "3  15.033296\n",
       "4  18.788294"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Label Encoding\n",
    "# Make all categorical features to discrete values\n",
    "cat_cols = ['play_pattern', 'under_pressure', 'body_part', 'technique', 'first_time',\n",
    "                'follows_dribble', 'redirect', 'one_on_one', 'open_goal', 'deflected']\n",
    " \n",
    "cat_features = features[cat_cols]\n",
    "features = features.drop(cat_cols, axis=1)\n",
    "features.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance</th>\n",
       "      <th>play_pattern</th>\n",
       "      <th>under_pressure</th>\n",
       "      <th>body_part</th>\n",
       "      <th>technique</th>\n",
       "      <th>first_time</th>\n",
       "      <th>follows_dribble</th>\n",
       "      <th>redirect</th>\n",
       "      <th>one_on_one</th>\n",
       "      <th>open_goal</th>\n",
       "      <th>deflected</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>20.248457</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>28.071338</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23.021729</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15.033296</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>18.788294</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    distance  play_pattern  under_pressure  body_part  technique  first_time  \\\n",
       "0  20.248457             8               1          0          4           0   \n",
       "1  28.071338             6               0          0          2           1   \n",
       "2  23.021729             8               1          0          4           0   \n",
       "3  15.033296             0               0          0          4           0   \n",
       "4  18.788294             8               0          0          4           1   \n",
       "\n",
       "   follows_dribble  redirect  one_on_one  open_goal  deflected  \n",
       "0                0         0           0          0          0  \n",
       "1                0         0           0          0          0  \n",
       "2                0         0           0          0          0  \n",
       "3                0         0           0          0          0  \n",
       "4                0         0           0          0          0  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Discrete values for each category\n",
    "le = preprocessing.LabelEncoder()\n",
    "cat_features = cat_features.apply(le.fit_transform)\n",
    "\n",
    "# Merge\n",
    "features = features.merge(cat_features, left_index=True, right_index=True)\n",
    "features.head()\n",
    "# Now we have turned all categorical features into discrete values, so we can work with a consistent dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "# X = model features, and y = labels\n",
    "X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.20, shuffle=True, random_state=42)\n",
    "\n",
    "# Using the Decision Tree Model\n",
    "clf = DecisionTreeClassifier(random_state=42)\n",
    " \n",
    "# Training\n",
    "clf.fit(X_train, y_train)\n",
    " \n",
    "# Making predictions\n",
    "y_pred = clf.predict(X_test)\n",
    "y_pred_prob = clf.predict_proba(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Predicted goals from test data: 24\n",
      "xG: 26.50\n",
      "Actual goals from test set): 27\n",
      "Difference from my xG value and actual goals =  -0.50\n",
      "\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.92      0.93      0.93       301\n",
      "           1       0.17      0.15      0.16        27\n",
      "\n",
      "    accuracy                           0.87       328\n",
      "   macro avg       0.55      0.54      0.54       328\n",
      "weighted avg       0.86      0.87      0.87       328\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x1008 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print results\n",
    "print(\"Predicted goals from test data:\", sum(y_pred))\n",
    "print(\"xG:\", \"{0:.2f}\".format(sum(y_pred_prob[:,1])))\n",
    "print(\"Actual goals from test set):\", sum(y_test))\n",
    "print('Difference from my xG value and actual goals = ','{0:.2f}'.format(sum(y_pred_prob[:,1])-sum(y_test)))\n",
    "print('')\n",
    "print(metrics.classification_report(y_test, y_pred))\n",
    "# Precision means of all the goals the modelled claimed to be a goal, how many were goals?\n",
    "# Recall means of all the actual goals, how many did the model predict to be a goal?\n",
    "# F1 score is the average of precision and recall, so the higher the F1 score, the better the model\n",
    " \n",
    "# Find the most important feature for goal\n",
    "important_features = pd.DataFrame({'feature':features.columns,'importance':np.round(clf.feature_importances_,3)})\n",
    "important_features = important_features.sort_values('importance',ascending=False)\n",
    " \n",
    "f, ax = plt.subplots(figsize=(12, 14))\n",
    "g = sns.barplot(x='importance', y='feature', data=important_features,\n",
    "                color=\"red\", saturation=.2, label=\"Total\")\n",
    "g.set(xlabel='Feature Importance', ylabel='Feature', title='Importance of Features in xG Model')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
